services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222"

  generator:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/generator/main.go"]
    volumes:
      - ".:/app"
    profiles:
      - manual

  database:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=casino
      - POSTGRES_PASSWORD=casino
      - POSTGRES_DB=casino
    volumes:
      - "./db:/db"
      - "./db/migrations:/docker-entrypoint-initdb.d"
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casino"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: golang:1.21-alpine
    working_dir: /app
    volumes:
      - .:/app
      - .env:/app/.env
    command: >
      /bin/sh -c "
        apk add --no-cache curl gcc musl-dev &&
        go mod download &&
        go mod verify &&
        go build -o subscriber cmd/subscriber/main.go &&
        go build -o publisher cmd/publisher/main.go &&
        ./subscriber
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      database:
        condition: service_healthy
      nats:
        condition: service_started
    environment:
      - NATS_URL=nats://host.docker.internal:4222
      - SERVICE_NAME=casino-subscriber
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_USER=casino
      - DB_PASSWORD=casino
      - DB_NAME=casino
      - DB_SSL_MODE=disable
      - EXCHANGE_RATE_API_KEY=e300c7dcb9710ed31c32d91f37d7907d
      - EXCHANGE_RATE_API_URL=https://api.exchangerate.host/live?source=EUR
      - EXCHANGE_RATE_CACHE_DURATION=200m
      - EXCHANGE_RATE_SOURCE_CURRENCY=EUR
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=remote-write-receiver'
    depends_on:
      app:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

  publisher:
    image: golang:1.21-alpine
    working_dir: /app
    volumes:
      - .:/app
      - .env:/app/.env
    command: >
      /bin/sh -c "
        apk add --no-cache curl gcc musl-dev &&
        go mod download &&
        go mod verify &&
        go build -o subscriber cmd/subscriber/main.go &&
        go build -o publisher cmd/publisher/main.go &&
        ./publisher
      "
    depends_on:
      nats:
        condition: service_started
    environment:
      - NATS_URL=nats://host.docker.internal:4222
      - SERVICE_NAME=casino-publisher
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:
